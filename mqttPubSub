#include <OneWire.h>
#include <DallasTemperature.h>
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// Temperatur
#define tempSensor D2
OneWire oneWire(tempSensor);
DallasTemperature sensors(&oneWire);
WiFiClient espClient;
PubSubClient client(espClient);
// Update these with values suitable for your network.
const char* ssid = "janSars"; //wifi ssid
const char* password = "sars1234"; //wifi Passord
const char* mqtt_server = "192.168.43.208"; //Broker Ip - static ip på Rpi
const char* inTopic = "tilESP"; //Topic som ESP subscriber til
const char* outTopic = "fraESP"; //Topic som ESP publiserer til
String clientId = "ESP01"; //endre tall for hver ESP

//Variabler for å publisere i intervall
long lastMsg = 0;
char msg[100];
int ledStatus;

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    // Attempt to connect
    if (client.connect(clientId.c_str())) {
      client.publish(outTopic, "TESTOUT");
      client.subscribe(inTopic);
    } else {
      delay(5000);
    }
  }
}
void callback(char* topic, byte* payload, unsigned int length) {
   if ((char)payload[0] == '1') {
    digitalWrite(2, LOW);
    ledStatus = 1;
  } else {
    digitalWrite(2, HIGH);
    ledStatus = 0;
  }
}

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  client.setServer(mqtt_server, 1883);
  sensors.begin();
  client.setCallback(callback);
  pinMode(2, OUTPUT);
}

void loop() {
  sensors.requestTemperatures();
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  long now = millis();
  
  if (now - lastMsg > 2000) {
    lastMsg = now;
    snprintf (msg, 100, "%d A%f B%d C%d D%d", now, sensors.getTempCByIndex(0), 1, 2, ledStatus);
    client.publish(outTopic, msg);
  }
}
